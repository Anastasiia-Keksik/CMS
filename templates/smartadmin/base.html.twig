<!DOCTYPE html>
<!--
Template Name:  SmartAdmin Responsive WebApp - Template build with Twitter Bootstrap 4
Version: 4.5.1
Author: Sunnyat A.
Website: http://gootbootstrap.com
Purchase: https://wrapbootstrap.com/theme/smartadmin-responsive-webapp-WB0573SK0?ref=myorange
License: You must have a valid license purchased only from wrapbootstrap.com (link above) in order to legally use this theme for your project.
-->
<html lang="{{ lang }}">
<head>
    <meta charset="utf-8">
    <title>
        {{ title }}
    </title>
    <meta name="description" content="Page Title">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, shrink-to-fit=no, user-scalable=no, minimal-ui">
    <!-- Call App Mode on ios devices -->
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <!-- Remove Tap Highlight on Windows Phone IE -->
    <meta name="msapplication-tap-highlight" content="no">
    <!-- base css -->
    {% block stylesheets %}
        <link id="vendorsbundle" rel="stylesheet" media="screen, print" href="{{ asset('smartadmin/css/vendors.bundle.css') }}">
        <link id="appbundle" rel="stylesheet" media="screen, print" href="{{ asset('smartadmin/css/app.bundle.css') }}">
        <link id="myskin" rel="stylesheet" media="screen, print" href="{{ asset('smartadmin/css/skins/skin-master.css') }}">
        <link id="stingcss" rel="stylesheet" media="screen, print" href="{{ asset('smartadmin/css/stingcms.css') }}">
        <link id="mytheme" rel="stylesheet" media="screen, print" href="{{ asset(theme) }}">
    {% endblock %}

    <!-- Place favicon.ico in the root directory -->
    <link rel="apple-touch-icon" sizes="180x180" href="{{ asset('smartadmin/img/favicon/apple-touch-icon.png') }}">
    <link rel="icon" type="image/png" sizes="32x32" href="{{ asset('smartadmin/img/favicon/favicon-32x32.png') }}">
    <link rel="mask-icon" href="{{ asset('smartadmin/img/favicon/safari-pinned-tab.svg') }}" color="#5bbad5">
    <link rel="stylesheet" media="screen, print" href="{{ asset('smartadmin/css/fa-brands.css') }}">
    <link rel="stylesheet" media="screen, print" href="{{ asset('smartadmin/css/fa-regular.css') }}">
    <!-- You can add your own stylesheet here to override any styles that comes before it
    <link rel="stylesheet" media="screen, print" href="css/your_styles.css">-->
</head>
<!-- BEGIN Body -->
<!-- Possible Classes

    * 'header-function-fixed'         - header is in a fixed at all times
    * 'nav-function-fixed'            - left panel is fixed
    * 'nav-function-minify'			  - skew nav to maximize space
    * 'nav-function-hidden'           - roll mouse on edge to reveal
    * 'nav-function-top'              - relocate left pane to top
    * 'mod-main-boxed'                - encapsulates to a container
    * 'nav-mobile-push'               - content pushed on menu reveal
    * 'nav-mobile-no-overlay'         - removes mesh on menu reveal
    * 'nav-mobile-slide-out'          - content overlaps menu
    * 'mod-bigger-font'               - content fonts are bigger for readability
    * 'mod-high-contrast'             - 4.5:1 text contrast ratio
    * 'mod-color-blind'               - color vision deficiency
    * 'mod-pace-custom'               - preloader will be inside content
    * 'mod-clean-page-bg'             - adds more whitespace
    * 'mod-hide-nav-icons'            - invisible navigation icons
    * 'mod-disable-animation'         - disables css based animations
    * 'mod-hide-info-card'            - hides info card from left panel
    * 'mod-lean-subheader'            - distinguished page header
    * 'mod-nav-link'                  - clear breakdown of nav links

    >>> more settings are described inside documentation page >>>
-->
<body class="mod-bg-1{% if pageName=='Profile' %} header-function-fixed{% endif %} erase-menu">
<!-- DOC: script to save and load page settings -->
{% block scripts %}
    <script>
        /**
         *	This script should be placed right after the body tag for fast execution
         *	Note: the script is written in pure javascript and does not depend on thirdparty library
         **/
        'use strict';

        var classHolder = document.getElementsByTagName("BODY")[0],
            /**
             * Load from localstorage
             **/
            themeSettings = (localStorage.getItem('themeSettings')) ? JSON.parse(localStorage.getItem('themeSettings')) :
                {},
            themeURL = themeSettings.themeURL || '',
            themeOptions = themeSettings.themeOptions || '';
        /**
         * Load theme options
         **/
        if (themeSettings.themeOptions)
        {
            classHolder.className = themeSettings.themeOptions;
            console.log("%câœ” Theme settings loaded", "color: #148f32");
        }
        else
        {
            console.log("Heads up! Theme settings is empty or does not exist, loading default settings...");
        }
        if (themeSettings.themeURL && !document.getElementById('mytheme'))
        {
            var cssfile = document.createElement('link');
            cssfile.id = 'mytheme';
            cssfile.rel = 'stylesheet';
            cssfile.href = themeURL;
            document.getElementsByTagName('head')[0].appendChild(cssfile);
        }
        /**
         * Save to localstorage
         **/
        var saveSettings = function()
        {
            themeSettings.themeOptions = String(classHolder.className).split(/[^\w-]+/).filter(function(item)
            {
                return /^(nav|header|footer|mod|display)-/i.test(item);
            }).join(' ');
            if (document.getElementById('mytheme'))
            {
                themeSettings.themeURL = document.getElementById('mytheme').getAttribute("href");
            };
            localStorage.setItem('themeSettings', JSON.stringify(themeSettings));
        }
        /**
         * Reset settings
         **/
        var resetSettings = function()
        {
            localStorage.setItem("themeSettings", "");
        }

    </script>
{% endblock %}
<!-- BEGIN Page Wrapper -->
<div class="page-wrapper">
    <div class="page-inner">
        <!-- BEGIN Left Aside -->
        {% block leftMenu %}
        {% endblock %}
        <!-- END Left Aside -->
        <div class="page-content-wrapper">
            <!-- BEGIN Page Header -->
            {% block header %}
            {% endblock %}
            <!-- END Page Header -->
            <!-- BEGIN Page Content -->
            {% block content %}
            {% endblock %}
            <!-- END Page Content -->
            <!-- BEGIN Page Footer -->
            {% block footer %}
            {% endblock %}
            <!-- END Page Footer -->
            <!-- BEGIN Shortcuts -->
            {% block shortcuts %}
            {% endblock %}
            <!-- END Shortcuts -->
            <!-- BEGIN Color profile -->
            {% block colorprofile %}
                <!-- this area is hidden and will not be seen on screens or screen readers -->
                <!-- we use this only for CSS color refernce for JS stuff -->
                <p id="js-color-profile" class="d-none">
                    <span class="color-primary-50"></span>
                    <span class="color-primary-100"></span>
                    <span class="color-primary-200"></span>
                    <span class="color-primary-300"></span>
                    <span class="color-primary-400"></span>
                    <span class="color-primary-500"></span>
                    <span class="color-primary-600"></span>
                    <span class="color-primary-700"></span>
                    <span class="color-primary-800"></span>
                    <span class="color-primary-900"></span>
                    <span class="color-info-50"></span>
                    <span class="color-info-100"></span>
                    <span class="color-info-200"></span>
                    <span class="color-info-300"></span>
                    <span class="color-info-400"></span>
                    <span class="color-info-500"></span>
                    <span class="color-info-600"></span>
                    <span class="color-info-700"></span>
                    <span class="color-info-800"></span>
                    <span class="color-info-900"></span>
                    <span class="color-danger-50"></span>
                    <span class="color-danger-100"></span>
                    <span class="color-danger-200"></span>
                    <span class="color-danger-300"></span>
                    <span class="color-danger-400"></span>
                    <span class="color-danger-500"></span>
                    <span class="color-danger-600"></span>
                    <span class="color-danger-700"></span>
                    <span class="color-danger-800"></span>
                    <span class="color-danger-900"></span>
                    <span class="color-warning-50"></span>
                    <span class="color-warning-100"></span>
                    <span class="color-warning-200"></span>
                    <span class="color-warning-300"></span>
                    <span class="color-warning-400"></span>
                    <span class="color-warning-500"></span>
                    <span class="color-warning-600"></span>
                    <span class="color-warning-700"></span>
                    <span class="color-warning-800"></span>
                    <span class="color-warning-900"></span>
                    <span class="color-success-50"></span>
                    <span class="color-success-100"></span>
                    <span class="color-success-200"></span>
                    <span class="color-success-300"></span>
                    <span class="color-success-400"></span>
                    <span class="color-success-500"></span>
                    <span class="color-success-600"></span>
                    <span class="color-success-700"></span>
                    <span class="color-success-800"></span>
                    <span class="color-success-900"></span>
                    <span class="color-fusion-50"></span>
                    <span class="color-fusion-100"></span>
                    <span class="color-fusion-200"></span>
                    <span class="color-fusion-300"></span>
                    <span class="color-fusion-400"></span>
                    <span class="color-fusion-500"></span>
                    <span class="color-fusion-600"></span>
                    <span class="color-fusion-700"></span>
                    <span class="color-fusion-800"></span>
                    <span class="color-fusion-900"></span>
                </p>
            {% endblock %}
            <!-- END Color profile -->
        </div>
    </div>
</div>
<!-- END Page Wrapper -->
<!-- BEGIN Quick Menu -->
{% block quickmenu %}
    <!-- to add more items, please make sure to change the variable '$menu-items: number;' in your _page-components-shortcut.scss -->
    <nav class="shortcut-menu d-none d-sm-block">
        <input type="checkbox" class="menu-open" name="menu-open" id="menu_open" />
        <label for="menu_open" class="menu-open-button ">
            <span class="app-shortcut-icon d-block"></span>
        </label>
        <a href="#" class="menu-item btn" data-toggle="tooltip" data-placement="left" title="Scroll Top">
            <i class="fal fa-arrow-up"></i>
        </a>
        <a href="page_login.html" class="menu-item btn" data-toggle="tooltip" data-placement="left" title="Logout">
            <i class="fal fa-sign-out"></i>
        </a>
        <a href="#" class="menu-item btn" data-action="app-fullscreen" data-toggle="tooltip" data-placement="left" title="Full Screen">
            <i class="fal fa-expand"></i>
        </a>
        <a href="#" class="menu-item btn" data-action="app-print" data-toggle="tooltip" data-placement="left" title="Print page">
            <i class="fal fa-print"></i>
        </a>
        <a href="#" class="menu-item btn" data-action="app-voice" data-toggle="tooltip" data-placement="left" title="Voice command">
            <i class="fal fa-microphone"></i>
        </a>
    </nav>
{% endblock %}
<!-- END Quick Menu -->
<!-- BEGIN Messenger -->
{% block messenger %}
{% endblock %}
<!-- END Messenger -->
<!-- BEGIN Page Settings -->
{% block pagesettings %}
{% endblock %}
<!-- END Page Settings -->
<!-- base vendor bundle:
     DOC: if you remove pace.js from core please note on Internet Explorer some CSS animations may execute before a page is fully loaded, resulting 'jump' animations
                + pace.js (recommended)
                + jquery.js (core)
                + jquery-ui-cust.js (core)
                + popper.js (core)
                + bootstrap.js (core)
                + slimscroll.js (extension)
                + app.navigation.js (core)
                + ba-throttle-debounce.js (core)
                + waves.js (extension)
                + smartpanels.js (extension)
                + src/../jquery-snippets.js (core) -->
{% block javascripts %}
    <script src="{{ asset('smartadmin/js/vendors.bundle.js') }}"></script>
    <script src="{{ asset('smartadmin/js/app.bundle.js') }}"></script>
    <script src="{{ asset('smartadmin/js/time/jquery.timeago.js') }}"></script>
    <script>
         function usunModal()
        {

            carouselItems = document.getElementsByClassName("carousel-item");

            for( i = 0; i < carouselItems.length; i++){
                if(carouselItems[i].classList.contains('active')){
                    carouselItems[i].classList.remove('active');
                }
            }
        }
    </script>
    <script>
        //CHECK FOR DARK THEME SETTINGS
        function DarkLightPrimeThemeOption(theme){
            $.ajax('{{ path('api_setTheme') }}', {
                method: "POST",
                data: {
                    'teheme' : theme
                },
                processData: false,
                contentType: false,
                success: function () {
                    console.log('theme changed');
                },
                error: function () {
                    console.log('theme changing error');
                }
            });

            console.log('co jest');
        }
    </script>
    <script>
        $(document).ready(function()
        {
            console.log($('.publishScroll').height());

            if ($('.publishScroll').height() > 210){
                $('.publishScroll').slimScroll(
                    {
                        position: 'right',
                        height: '210',
                        railVisible: true,
                        alwaysVisible: true
                    });
            }

            $('.chat-scroll').slimScroll(
                {
                    position: 'right',
                    height: '100%',
                    railVisible: true,
                    alwaysVisible: true,
                    start: 'bottom'
                });
        });

    </script>
    <script>
        $('.scrollleft').click(function () {
            $('#scrollBar').animate({
                scrollLeft: '-=153'
            }, 500, 'easeOutQuad');
        });
        $('.scrollright').click(function () {
            $('#scrollBar').animate({
                scrollLeft: '+=153'
            }, 500, 'easeOutQuad');
        });
    </script>
    <script>
        let conversations = new Array();
        let activeConversation;
        let url = new URL('http://127.0.0.1:3000/.well-known/mercure');

        document.addEventListener('DOMContentLoaded', function () {
            // let url = new URL('http://127.0.0.1:3000/.well-known/mercure');
            //
            // url.searchParams.append('topic', '/pies');
            //
            // const eventSource = new EventSource(url);
            //
            // eventSource.onmessage = (event) => {
            //     console.log(event);
            // }

            fetch('/conversations').then(result => result.json()).then (data => {

                data.forEach(elm => {
                    $('#showObject').append('<br><br>');
                    for (let key in elm){
                        $('#showObject').append('' +
                            key + ' : ' + elm[key] +
                            '<br>');
                        conversations[elm['conversationId']] = elm;
                    }

                    let names = '';
                    let namesIt = 0;
                    elm['participants'].forEach(participant =>{
                        namesIt++;

                        if (elm['participants'].length === namesIt){
                            names += participant['firstName'] + " " + participant['username'] + " " + participant['lastName'];
                        }else{
                            names += participant['firstName'] + " " + participant['username'] + " " + participant['lastName'] + "<br>";
                        }

                    });

                    $('#active_conversations').append('' +
                        '<div id="conversation_load_'+elm['conversationId']+'" onclick="loadMessages(\''+ elm['conversationId'] +'\')" class="mx-2 tooltip-appending" data-toggle="tooltip" data-placement="auto" title="" data-original-title="' + names + '" data-html="true">\n' +
                        '  <div class="align-middle status status-success status-sm">\n' +
                        '    <span class="profile-image-md rounded-circle d-block" style="background-image:url(\''+ elm['participants'][Math.floor(Math.random() * elm['participants'].length)]['avatarFileName'] +'\'); background-size: cover;"></span>\n' +
                        '  </div>\n' +
                        '</div>' +
                        '');






                });

                $('body').on('mouseenter', '.tooltip-appending', function () {
                    if ($(this).attr('data-toggle') == 'tooltip') {
                        $(this).tooltip({
                            container: 'body',
                            placement: 'auto',
                            trigger: 'hover'
                        }).tooltip('show');
                    }
                });


            })
        });

        ///mozna torobic latwiej i zwiezlej bez tych wszystkich ifow,oparte osegment get i sent

        let isConversationLoadedBOL = new Array();
        let conversationMessagesARRAY = new Array(); // wiadomosci konwersacji pobrane z fetcha podkonkretne id
        let activeBOL = new Array(); //active (last) Segment, is it mine? true for yes
        let isFirstBOL = new Array();
        let lastMessageIdSTRING;
        let lastMessageMineOrHisBOL;
        let czyJestToZmianaUseraNaInnegoBOL = false;
        let actualSegmentIdTagNameSTRING;
        let willItBeFirstSegmentInSeriesOfMessagesFromOneUserBOL = true;
        let conversationScrollValueINT = new Array(); //TODO: dodac tu zapisywanie polozenie scroll bara dla kazdej konwersacji

        function deactivateConversation(){
            if (activeConversation !== null){
                $('#chat_conversation_'+ activeConversation).addClass('hidden-xs-up');
                $('#conversation_load_'+ activeConversation).addClass('hidden-xs-up');
                $.ajax('/conversations/deactivate/'+activeConversation, {
                    method: "POST",
                    data: {
                    },
                    success: function () {
                        console.log('Conversation '+activeConversation+' deactivated');
                    },
                    error: function () {
                        console.log('deactivation error');
                    }
                });
            }
        }

        function leaveConversation(){
            if (activeConversation !== null){
                $('#chat_conversation_'+ activeConversation).remove();
                $('#conversation_load_'+ activeConversation).remove();
                $('#chat-dropdown').dropdown('toggle');
                $('#chat-header').addClass('hidden-xs-up');
                $.ajax('/conversations/leave/'+activeConversation, {
                    method: "POST",
                    data: {
                    },
                    success: function () {
                        console.log('Conversation '+activeConversation+' leaved');
                    },
                    error: function () {
                        console.log('deactivation error');
                    }
                });
            }
        }

        // wgrywa wiadomosci po kliknieciu konwersacji
        function loadMessages(id) {
            //conversations = id; //aktywna (wlaczona (wyswietlona) konwersacja) inne maja klase hidden
            console.log(conversations[id]);


            if (conversations[id]['participants'].length > 1){ //ustanawia nazwe dla konwersacji, nazwa usera dla 1 partycypanta, konferencja dla wielu
                $('#chat-name').text('Conference'); // TODO: dac nadawanie nazw dla konwersaji
            }else{
                if (conversations[id]['participants'][0]['firstName'] === null && conversations[id]['participants'][0]['lastName'] === null){
                    $('#chat-name').text(conversations[id]['participants'][0]['username']);
                }else{
                    $('#chat-name').text(conversations[id]['participants'][0]['firstName'] + ' ' + conversations[id]['participants'][0]['lastName']);
                }
                $('#chat-occupancy').text(conversations[id]['participants'][0]['Occupation']);
            }

            activeConversation = id;

            // jesli konwersacja jeszcze sie nie wgrala to:
            if (isConversationLoadedBOL[id]!==true){
                fetch('/messages/'+ id).then(result => result.json()).then (data => { // pobierz konwersacje z repozytorium
                    $('#chat-header').removeClass('hidden-xs-up');// pokazuje header chatu, znajduje sie tam nazwa usera, badz to konwersacji konferencyjnej

                    isFirstBOL[id] = true //gdy jest pierwsza dajesz start
                    conversationMessagesARRAY[id] = data; // wszystkie wiadomosci pobrane z fetcha

                    //nie rozumiem,potem to sprawdzic
                    for (let key in activeBOL){ //aktywny segment??? BOOLEAN
                        if (activeBOL[key]===true && key !== id && isConversationLoadedBOL[key] === true){
                            $('#chat_conversation_'+key).addClass('hidden-xs-up');
                            activeBOL[key] = false;console.log('ukrywam' + key);
                        }
                        console.log(key + ' ' + activeBOL[key]);
                    }

                    //po wgraniu konwersacji, tworzy kontener dla wszystkich wiadomosci, do niego beda one dodawane.
                    $('#chat_container').append('<div id="chat_conversation_'+ id +'" class="w-100 chat-conversation"></div>')
                    $('#chat_conversation_'+ id).append('<div id="load_more_' + id + '" onclick="loadMoreMessages('+id+')" class="w-100 cursor-pointer text-white mb-g text-center" style="background: #52bf11; border: 1px darkgreen solid; border-radius: 5px"><b>click to check if you can load more</b></div>')

                    //czy tojesto to ze juz jestesmy na segmencie ktoryzostal dodany z nasluchiwanie a nie repozytorium
                    let nextSegment = false;

                    count = 1;
                    conversationMessagesARRAY[id].forEach(msg => {
                        actualSegmentIdTagNameSTRING = '#message_'+msg['id'];

                        //jesli wiadomosc wyslalem ja
                        if (msg['mine']===true){
                            if (lastMessageMineOrHisBOL === false){
                                czyJestToZmianaUseraNaInnegoBOL = true;
                            }

                            if (isFirstBOL[id] === false && czyJestToZmianaUseraNaInnegoBOL === true){
                                $('#message_'+lastMessageIdSTRING).addClass('chat-end');
                            }


                            //dodaj segment do kontenera konwersacji, wiadomosc pobrana jest z foreacha zmiennej tablicowej
                            $('#chat_conversation_'+id).append('' +
                                '<!-- start .chat-segment -->' +
                                '<div id="message_'+ msg['id'] +'" class="chat-segment chat-segment-sent">\n' +
                                ' <div class="chat-message tooltip-appending" data-toggle="tooltip" data-placement="auto" title="" data-original-title="' + msg['createdAt'] + '" data-html="true">\n' +
                                '  <p>\n' +
                                msg['content'] +
                                '  </p>\n' +
                                ' </div>\n' +
                                '</div>\n' +
                                '<!--  end .chat-segment -->' +
                                '');

                            //jesli sie wgralo jako pierwsze, jesli barykady jeszcze nie ma i jesli segment jeszcze nie wystartowal
                            if (isFirstBOL[id] === true || czyJestToZmianaUseraNaInnegoBOL === false && willItBeFirstSegmentInSeriesOfMessagesFromOneUserBOL === true){
                                $(actualSegmentIdTagNameSTRING).addClass('chat-start');
                                willItBeFirstSegmentInSeriesOfMessagesFromOneUserBOL = false;
                            }else{
                                $(actualSegmentIdTagNameSTRING).addClass('chat-middle');
                            }
                        }else{
                            if (lastMessageMineOrHisBOL === true){
                                czyJestToZmianaUseraNaInnegoBOL = true;
                            }

                            if (isFirstBOL[id] === false && czyJestToZmianaUseraNaInnegoBOL === true){
                                $('#message_'+lastMessageIdSTRING).addClass('chat-end');
                            }

                            $('#chat_conversation_'+id).append('' +
                                '<!-- start .chat-segment -->\n' +
                                '<div id="message_'+ msg['id'] +'" class="chat-segment chat-segment-get">\n' +
                                ' <div class="chat-message">\n' +
                                '  <p>\n' +
                                msg['content'] +
                                '  </p>\n' +
                                ' </div>\n' +
                                '</div>\n' +
                                '<!--  end .chat-segment -->' +
                                '');

                            if (czyJestToZmianaUseraNaInnegoBOL === true && isFirstBOL[id] === false){
                                $(actualSegmentIdTagNameSTRING).addClass('chat-start');

                            }else{
                                $(actualSegmentIdTagNameSTRING).addClass('chat-middle');
                            }
                        }
                        isFirstBOL[id] = false;
                        lastMessageIdSTRING = msg['id'];
                        lastMessageMineOrHisBOL = msg['mine'];
                        czyJestToZmianaUseraNaInnegoBOL = false;
                        count++;
                        console.log('COUNT iteration: ' + count);
                        console.log('ARRAY LENGTH: ' + conversationMessagesARRAY[id].length);
                        console.log('msg tag name: ' + actualSegmentIdTagNameSTRING);
                        if (count > conversationMessagesARRAY[id].length ){
                            $(actualSegmentIdTagNameSTRING).removeClass('chat-middle');
                            $(actualSegmentIdTagNameSTRING).addClass('chat-end');
                            console.log(lastMessageIdSTRING + "chnging na end");
                        }
                    });
                    activeBOL[id]=true;
                });
                console.log('conversation: '+ id +' loaded');

                //$('.chat-scroll').slimScroll({'scrollBy': '999999px'});
            }else{
                if (activeBOL[id]===false){
                    activeBOL[id]=true;
                    $('#chat_conversation_'+id).removeClass('hidden-xs-up');
                }
                for (let key in activeBOL){
                    if (activeBOL[key]===true && key !== id){
                        $('#chat_conversation_'+key).addClass('hidden-xs-up');
                        activeBOL[key] = false;
                    }
                    //console.log(key + ' ' + active[key]);
                }
                //console.log(conversationMessagesARRAY[id]);
            }

            console.log('czy konwersacja jest true: '+isConversationLoadedBOL[id])
            if (isConversationLoadedBOL[id]!==true){
                url.searchParams.append('topic', '/conversations/'+id);

                const eventSource = new EventSource(url);
                eventSource.onmessage = (event) => {
                    let msgdata = JSON.parse(event.data);
                    console.log(msgdata);

                    let polozenieScrolla = $('.chat-scroll').scrollTop();
                    let calkDLugosc = $('#chat_conversation_'+id).prop("scrollHeight");
                    calkDLugosc = calkDLugosc;


                    if (msgdata['left']==1){
                        $('#chat_conversation_'+id).append(
                            '<!-- user left -->'+
                            '<div class="w-100 text-center text-dark"><small>' + msgdata['userFirstName'] + " " +msgdata['userLastName'] + ' left conversation </small></div>' +
                            '<!-- end user left -->'
                        );
                    }else{
                        if (msgdata['authorid'] == '{{ user.id }}'){
                            $('#chat_conversation_'+id).append(
                                '<!-- start .chat-segment -->' +
                                '<div id="message_'+ msgdata['id'] +'" class="chat-segment chat-segment-sent">\n' +
                                ' <div class="chat-message tooltip-appending" data-toggle="tooltip" data-placement="auto" title="" data-original-title="' + msgdata['createdAt'] + '" data-html="true">\n' +
                                '  <p>\n' +
                                msgdata['content'] +
                                '  </p>\n' +
                                ' </div>\n' +
                                '</div>\n' +
                                '<!--  end .chat-segment -->'
                            );
                            if ( polozenieScrolla > calkDLugosc-1400){
                                $('.chat-scroll').slimScroll({'scrollTo': $('#chat_conversation_'+id).prop("scrollHeight")});
                            }
                            console.log('polozenie scrola: ' + polozenieScrolla);
                            console.log('calkowita dlugosc:' + calkDLugosc);
                            //$('.chat-scroll').slimScroll({'scrollTo': $('#chat_conversation_'+id).prop("scrollHeight")});
                        }else{
                            $('#chat_conversation_'+id).append(
                                '<!-- start .chat-segment -->' +
                                '<div id="message_'+ msgdata['id'] +'" class="chat-segment chat-segment-get">\n' +
                                ' <div class="chat-message tooltip-appending" data-toggle="tooltip" data-placement="auto" title="" data-original-title="' + msgdata['createdAt'] + '" data-html="true">\n' +
                                '  <p>\n' +
                                msgdata['content'] +
                                '  </p>\n' +
                                ' </div>\n' +
                                '</div>\n' +
                                '<!--  end .chat-segment -->'
                            );
                            if ( polozenieScrolla > calkDLugosc-1400){
                                $('.chat-scroll').slimScroll({'scrollTo': $('#chat_conversation_'+id).prop("scrollHeight")});
                            }
                            //   $('.chat-scroll').slimScroll({'scrollTo': $('#chat_conversation_'+id).prop("scrollHeight")});
                        }
                    }

                    $('msgr_input').focus();
                    //console.log($('.chat-scroll').scrollTop());
                    //$('.chat-scroll').slimScroll({'scrollBy': $('#message_'+ msgdata['id']).scrollHeight});
                }

            }
            $('.chat-scroll').slimScroll({'scrollTo': $('#chat_container').prop("scrollHeight")});
            $('#msgr_input').focus();
            isConversationLoadedBOL[id] = true;
        }
        //zrobic ze jeslikasuje conversacje, activeConversationId jest kasowane na false
        function send_msgr_input() {
            //console.log(document.getElementById('msgr_input').innerHTML);
            if (activeConversation !== false){
                $.ajax('/messages/'+activeConversation, {
                    method: "POST",
                    data: {
                        'content' : document.getElementById('msgr_input').innerHTML,
                    },
                    success: function () {
                        console.log('msg sent');
                        document.getElementById('msgr_input').innerHTML = '';
                        $('msgr_input').focus();
                    },
                    error: function () {
                        console.log('error - msg not sent');
                        $('msgr_input').focus();
                    }
                });
            }
            $('msgr_input').focus();
        }
        let conversationMoreMessagesLoadTimesINT = new Array();
        function loadMoreMessages(id){
            if (conversationMoreMessagesLoadTimesINT[id] === undefined){
                conversationMoreMessagesLoadTimesINT[id] = 1;
            }
            conversationMoreMessagesLoadTimesINT[id]++;

            $.ajax('/messages/'+activeConversation, {
                method: "POST",
                data: {
                },
                success: function () {
                    console.log('msg sent');
                },
                error: function () {
                    console.log('error - msg not sent');
                }
            });
        }
    </script>
    <script>
        function getAll(){
            if (GotAll === false){
                $.ajax('{{ path('favourites_getAll') }}', {
                    method: "POST",
                    success: function (data) {
                        console.log(data);
                    },
                    error: function () {
                        console.log('theme changing error');
                    }
                });
                GotAll = true;
            }
        }

        function getSM(){
            if (GotSM === false){
                $.ajax('{{ path('favourites_getAll') }}', {
                    method: "POST",
                    success: function (data) {
                        data.forEach(function(elm){
                            console.log(elm)
                            console.log()
                            if (elm.spId !== null) {
                                let spData = new Date(elm.spCreatedAt['date']);
                                $('#showSM').append('<div class="card mb-3">\n' +
                                    '                                {# daj w style nizej                   {% if post.BGFilename is not null %}style="background-image: url(\'{{ asset(\'upload/social/BackGrounds/\'~post.AuthorUsername~\'/\'~post.BGFilename) }}\'); background-size: 100%;"{% endif %} #}\n' +
                                    '                                <div class="card-body pb-0 px-0 pt-0 rounded-top shadow-5" >\n' +
                                    '                                    <div id="black-transparent_ID" class="w-100" style="background-color: rgba(0,0,0, 0)">\n' +
                                    '                                        <div id="white-transparent_ID" class="w-100" style="background-color: rgba(255,255,255, 0)">\n' +
                                    '                                            <div id="postUserCreBg_ID" onmouseover="postupperbgColorChange(\'postUserCreBg_ID\')" onmouseleave="postupperbgColorChangeBack(\'postUserCreBg_ID\')" class="rounded-top px-4 text-black pt-3"\n' +
                                    '                                                 style="background: rgb(255,255,255); background: linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,.3) 55%, rgba(255,255,255,.4) 100%);">\n' +
                                    '                                                <div class="d-flex flex-row pb-2 mb-1 pt-2 pl-2 rounded-pill border-top-0 border-left-0 border-bottom-0 rounded-right-0 pr-2 border-right-0">\n' +
                                    '                                                    <div class="d-inline-block align-middle rounded-circle status status-success mr-3" style="background: rgba(0,0,0, 0.9);">\n' +
                                    '                                                        {# <span class="profile-image rounded-circle d-block" style="background-image:url(\'{{ asset(\'upload/avatars/\'~post.AuthorUsername~\'/\'~)|imagine_filter(\'my_thumb\') }}\'); background-size: cover;"></span> #}\n' +
                                    '                                                    </div>\n' +
                                    '                                                    <h5 class="mb-0 flex-1 text-black opacity-70 fw-400">{# background: linear-gradient(90deg, rgba(0,0,0,0.9) 0%, rgba(0,0,0,0.8419117988992471) 24%, rgba(0,0,0,0.7606793059020483) 40%, rgba(0,0,0,0.6738445720084909) 49%, rgba(0,0,0,0.6262255243894433) 52%, rgba(0,0,0,0) 100%); #}\n' +
                                                                                                elm.spFirstName + " \"" + elm.spUsername + "\" " + elm.spLastName +
                                        '                                                        <small class="m-0 l-h-n">\n' +
                                                                                                    elm.spOccupation +
                                    '                                                        </small>\n' +
                                    '                                                    </h5>\n' +
                                    '                                                    <span class="fs-xs color-fusion-900">\n' +
                                                                                                jQuery.timeago(spData)+
                                    '                                                    </span>\n' +
                                    '                                                </div>\n' +
                                    '                                            </div>\n' +
                                    '                                            <div class="px-4">\n' +
                                    '                                                <div class="pb-3 pt-2 border-top-0 border-left-0 border-right-0 text-muted">\n'+ elm.spContent +
                                    '                                                </div>\n' +
                                    '                                                <div class="d-flex py-3 justify-content-between">\n' +
                                    '                                                    <div class="rounded p-1" style="background-color: rgba(255,255,255,0.5)">\n' +
                                    '                                                        <a href="javascript:void(0);" class="d-inline-flex align-items-center">\n' +
                                    '                                                            <i class="fas fa-heart fs-xs mr-1 text-danger"></i> <span class="color-primary-700">'+elm.spLikes+'</span>\n' +
                                    '                                                        </a>\n' +
                                    '                                                    </div>\n' +
                                    '                                                    <div class="rounded p-1" style="background-color: rgba(255,255,255,0.5);">&nbsp;&nbsp;&nbsp;\n' +
                                    '                                                        <span>\n' +
                                    '                                                            <a class="" data-toggle="modal" data-target="#postModal" onclick="activatePostCarousel(\'#post_ID_carousel\');">\n' +
                                    '                                                                <span class="color-primary-700">Read full</span>\n' +
                                    '                                                            </a>\n' +
                                    '                                                        </span>\n' +
                                    '                                                    </div>\n' +
                                    '                                                </div>\n' +
                                    '                                            </div>\n' +
                                    '                                        </div>\n' +
                                    '                                    </div>\n' +
                                    '                                </div>\n' +
                                    '                            </div>\n')
                            }else if(elm.spcId !== null){
                                let spcData = new Date(elm.spcCreatedAt['date']);
                                $('#showSM').append('            <div class="card shadow-5 mb-3">\n' +
                                    '                                <div class="d-flex flex-row rounded d-inline-block pt-3 align-middle bg-light w-100 p-2" style="border-top: 0 black solid;">\n' +
                                    '                                    <div class="d-inline-block align-middle status status-sm status-success mr-3">\n' +
                                    '                                        <span class="ml-1 mt-1 profile-image profile-image-md rounded d-block mt-1" {# style="background-image: url(\'{{ comment.AuthorAvatarFileUrl }}\'); background-size: cover;" #}></span>\n' +
                                    '                                    </div>\n' +
                                    '                                    <div class="mb-0 flex-1 text-dark mr-1 ">\n' +
                                    '                                        <div class="d-flex">\n' +
                                    '                                            <a href="javascript:void(0);" class="text-dark fw-500">\n' +
                                            elm.spcFirstName + " \"" + elm.spcUsername + "\" " + elm.spcLastName +
                                    '                                            </a>\n' +
                                    '                                            <span class="text-muted fs-xs opacity-70 ml-auto">\n' +
                                    '                                                '+ jQuery.timeago(spcData) +'\n' +
                                    '                                            </span>\n' +
                                    '                                        </div>\n' +
                                    '                                        <p class="mb-0">\n' +
                                                                                elm.spcContent +
                                    '                                        </p>\n' +
                                    '                                        <div>\n' +
                                    '                                            <a href="javascript: addHeart(  ID  );" class="d-inline-flex align-items-center text-dark">\n' +
                                    '                                                <i class="fas fa-heart fs-xs mr-1 text-danger"></i> <span>0 Likes</span>\n' +
                                    '                                            </a>\n' +
                                    '\n' +
                                    '                                            <a href="#answer_ Comment.Id " data-toggle="collapse" aria-expanded="false" aria-controls="answer_Comment.Id "\n' +
                                    '                                                    {# onclick="changeCommgentCss(#comment_{{ post.Id }}_{{ loop.index }}, #comment_{{ post.Id }}_{{ loop.index1 }})" #}\n' +
                                    '                                               class="float-right">\n' +
                                    '                                                <span>\n' +
                                    '                                                    <a class="" data-toggle="modal" data-target="#postModal" onclick="activatePostCarousel(\'#post_ID_carousel\');">\n' +
                                    '                                                        <span class="color-primary-700">Go to comment</span>\n' +
                                    '                                                    </a>\n' +
                                    '                                                </span>\n' +
                                    '                                            </a>\n' +
                                    '                                        </div>\n' +
                                    '                                    </div>\n' +
                                    '                                </div>\n' +
                                    '                            </div>\n')
                            }
                        })
                    },
                    error: function () {
                        console.log('theme changing error');
                    }
                });
                GotSM = true;
            }
        }

        function getGallery(){
            if (GotGallery === false){
                $.ajax('{{ path('favourites_getAll') }}', {
                    method: "POST",
                    success: function (data) {

                    },
                    error: function () {
                        console.log('theme changing error');
                    }
                });
                GotGallery = true;
            }
        }

        function getForums(){
            if (GotForums === false){
                $.ajax('{{ path('favourites_getForums') }}', {
                    method: "POST",
                    success: function (data) {
                        data.forEach(function(elm) {
                            console.log(elm)
                            if (elm.ftId !== null) {
                                let ftData = new Date(elm.ftCreatedAt['date']);
                                $('#showForums').append('<div class="card mb-3 bg-primary-100">\n' +
                                    '                                <div class="card-body">\n' +
                                    '                                    <label>\n' +
                                    '                                        <img src="/upload/avatars/'+elm.ftUsername+'/'+elm.ftAvatarFileName+'" class="profile-image-sm rounded-circle" alt="'+elm.ftUsername+'"> \n'+ elm.ftFirstName + " " + elm.ftUsername + " " + elm.ftlastName +
                                    '                                    </label><br>\n' +
                                    '                                    Title: '+ elm.ftTitle +'\n' +
                                    '                                </div>\n' +
                                    '                            </div>')
                            } else if (elm.fpId !== null) {
                                let fpData = new Date(elm.fpCreatedAt['date']);
                                $('#showForums').append('<div class="card mb-3">\n' +
                                    '                                <div class="card-body">\n' +
                                    '                                    <label>\n' +
                                    '                                        <img src="/upload/avatars/'+elm.fpUsername+'/'+elm.fpAvatarFileName+'" class="profile-image-sm rounded-circle" alt="'+elm.fpUsername+'"> \n' + elm.fpFirstName + " " + elm.fpUsername + " " + elm.fplastName +
                                    '                                    </label><br>\n' +
                                    '                                    '+elm.fpContent+'\n' +
                                    '                                </div>\n' +
                                    '                            </div>')
                            }
                        })
                    },
                    error: function () {
                        console.log('theme changing error');
                    }
                });
                GotForums = true;
            }
        }

        function getArt(){
            if (GotArt === false){
                $.ajax('{{ path('favourites_getAll') }}', {
                    method: "POST",
                    success: function (data) {
                        console.log('theme changed');
                    },
                    error: function () {
                        console.log('theme changing error');
                    }
                });
                GotArt = true;
            }
        }

        let notificationLoaded = false;
        function loadNotifications(){
            if (notificationLoaded === false){
                $('#invitations').html('<div class="w-100 text-center">Loading...</div>');
                $.ajax('{{ path('app_loadNotifications') }}', {
                    method: "POST",
                    success: function (data) {
                        data = JSON.parse(data)
                        notificationLoaded = true;
                        data.forEach(elm => {
                            $('#invitations').html(' <li id="invition_from-'+elm.person.Id+'">'+
                                ' <a href="/profile/'+elm.person.Username+'" class="d-flex align-items-center">'+
                                '                                 <span class="status status-danger mr-2">'+
                                '                                      <span class="profile-image rounded-circle d-inline-block" style="background-image:url(\'/smartadmin/img/demo/avatars/avatar-b.png\')"></span>'+
                                '                                  </span>'+
                                '     <span class="d-flex flex-column flex-1 ml-1">'+
                                '                                     <div class="d-flex flex-row name">'+
                                '                                         <span class="name w-50 text-truncate">'+elm.person.FirstName+' '+elm.person.LastName+'</span>'+
                                '                                         <div class="w-50"><span class="fs-nano text-muted mt-1 float-right">'+elm.person.CreatedAt+'</span></div>'+
                                '                                     </div>'+
                                '         <span>'+elm.person.Username+'&nbsp;</span>'+
                                '                                     <div class="btn-group">'+
                                '                                         <span class="btn btn-outline-info btn-xs">Accept</span>'+
                                '                                         <span class="btn btn-outline-danger btn-xs">Reject</span>'+
                                '                                     </div>'+
                                '                                   </span>'+
                                '  </a>'+
                                ' </li>');
                        })
                    },
                    error: function () {
                        console.log('somethingWrong');
                    }
                });
            }
        }
    </script>
    <script>
        function InvitePerson(id, circleId){
            $('.invitation').html('<i class="fal fa-clock"></i> wait')
            $.ajax({
                url: '/sendInvitationRequest/'+id+'/'+circleId,
                method: 'GET',
                success: function () {
                    $('.invitation').html('<i class="fal fa-hand-middle-finger"></i> Cancel invitation')
                },
                error: function () {
                    $('.invitation').html('<i class="fal fa-tired"></i> Some error - try again')
                }
            });
        }
    </script>
    <script>
        let newCircleNameId;

        function createCircle(id){
            newCircleNameId = id;
            if ($('#newCircleName-'+id).val() != ''){
                $('#choseCircleImage').modal('show')
                if (!$('#namerequired-'+id).hasClass('d-none')){
                    $('#namerequired-'+id).addClass('d-none')
                }
            }else{
                $('#namerequired-'+id).removeClass('d-none')
            }
        }

        function choseCircleImage(image){
            $('#choseCircleImage').modal('hide')
            $.ajax({
                url: '/createCircle',
                data: {
                    '_token': '{{ csrf_token('createCircle') }}',
                    'CircleName': $('#newCircleName-'+newCircleNameId).val(),
                    'ImageName': image
                },
                method: 'POST',
                dataType: 'json',
                success: function (data) {
                    $('.circle-target').append('<div class="col-4 text-center" onclick="InvitePerson(\'{{ user.Id }}\', \''+data.id+'\')">'+
                        '    <img width="100px" height="100px" style="border: 1px black solid; border-radius: 15px;">'+
                        '    <p>'+$('#newCircleName-'+newCircleNameId).val()+'</p>'+
                        '</div>')
                },
                error: function (error) {
                    console.log(error.status)
                }
            });
        }

        let areCirclesAlreadyLoaded = false
        let areTheyLoadingCircles = false
        function showCircles(){
            if (areCirclesAlreadyLoaded === false && areTheyLoadingCircles === false){
                areTheyLoadingCircles = true
                $('.circle-target').html('<span class="w-100 text-center mb-g">Loading...</span>')
                $.ajax({
                    url: '/getCircles',
                    data: {
                        '_token': '{{ csrf_token('getCircles') }}',
                    },
                    method: 'POST',
                    dataType: 'json',
                    success: function (data) {
                        //data = JSON.parse(data)
                        $('.circle-target').html('')
                        data.forEach(elm => {
                            console.log(elm)
                            $('.circle-target').append('<div class="col-4 text-center" onclick="InvitePerson(\'{{ user.Id }}\', \''+elm.id+'\')">'+
                                '    <img width="100px" height="100px" style="border: 1px black solid; border-radius: 15px;">'+
                                '    <p>'+elm.Name+'</p>'+
                                '</div>')
                        })
                        areCirclesAlreadyLoaded = true;
                        areTheyLoadingCircles = false;
                    },
                    error: function (error) {
                        console.log(error.status)
                        areTheyLoadingCircles = false;
                    }
                });
            }
        }
    </script>
{% endblock %}
<!--This page contains the basic JS and CSS files to get started on your project. If you need aditional addon's or plugins please see scripts located at the bottom of each page in order to find out which JS/CSS files to add.-->
</body>
<!-- END Body -->
</html>
