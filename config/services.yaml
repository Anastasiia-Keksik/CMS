# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    mercure_secret_key: '%env(MERCURE_SECRET_KEY)%'
    mercure_publish_url: '%env(MERCURE_PUBLISH_URL)%'
    kernel.root_dir: '%kernel.project_dir%'
    stripe_secret_key: sk_test_8Fj878j44BkGFAstQq9jysL700ie9jhjRd
    stripe_public_key: pk_test_CGE4Xtq5nlasSi9d4OKJX1DF00NfnjPjL8
    secure_channel: https #TODO: po opublikowaniu strony zamienic to na "https"

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\EventListener\RequestTypeListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request }

    stripe_client:
        class: App\PaymentBundle\StripeClient
        autowire: true
        arguments: ['%stripe_secret_key%']